A. OOPs (OBJECT ORIENTED PROGRAMMING):
   1. Explain polymorphism, its types, and scenario-based interview programs.
   2. Composition and aggregation in inheritance.
   3. Difference between == and .equals().
   4. How do you create a custom immutable class in Java?
   5. what is the Marker interface?
   6. Difference between String, StringBuffer, and StringBuilder?
----------------------------------------------------------------------------------------------------------------------------------------------------------------------

B. EXCEPTION HANDLING:
   1. What is an Exception in Java, and what does the Exception hierarchy look like?
   2. What is the difference between throw and throws in Java?
   3. What is Exception Propagation in Java, and how does it work?
   4. What is rethrowing an Exception in Java, and when is it used?
----------------------------------------------------------------------------------------------------------------------------------------------------------------------

C. MULTITHREADING:
   1. What is multithreading?
   2. What is the thread scheduler?
   3. How many ways are there to create a thread in Java?
   4. What is the default thread in Java?
   5. What is the volatile keyword, and when should it be used?
   6. How do we overcome data inconsistency problems, and what is the difference between synchronized, volatile, and atomic?
   7. How do we resolve deadlocks in multithreading in Java?
   8. What is ExecutorService (Thread Pools), and what are the differences between the submit() and execute() methods?
   9. What is ThreadLocal?
   10. What is a daemon thread?
   11. What is thread safety?
   12. What is synchronization, and what is a synchronized block?
   13. Explain the thread life cycle.
   14. What is the difference between join(), sleep(), and wait() methods?
   15. What is a green thread?
   16. How do we resolve race conditions?
   17. What happens if we call thread.start() twice?
   18. What is the difference between Callable and Runnable in multithreading?
   19. What is the Future interface in multithreading in Java?
   20. What is CompletableFuture in multithreading?
   21. What is the difference between Future and CompletableFuture?
   22. What are CountDownLatch, CyclicBarrier, Semaphore, Exchanger, and Phaser?
------------------------------------------------------------------------------------------------------------------------------------------------------
 4. Hashmap internal working?

 8. Java 8 featurres( functional interfaces, lambda expressions, method refference, stream api( intermediate and terminal operations).
 9. Fail safe and fail fast collectionsin java?
 10. Regular expressions like based on comma or space split string programs?
 11. Difference between HashMap and ConcurrentHashMap?
 
  

B. ADVANCED JAVA:
C. SPRING BOOT:
D. HIBERNATE:
E. SPRING SECURITY:
D. WEBSERVICES:
E. SQL:
   1. different between delete vs truncate vs drop?
   2. explain different types of joins?
   
F. APACHE KAFKA:
G. AWS:
   1. What are AWS services do you know?
   2. What is the use of roles and policies in AWS IAM?
   3. What is a load balancer, and what are its types (Application, Network, Gateway)?
   4. What are inbound and outbound rules?
   5. What storage classes are available in an S3 bucket?
   6. What are the data storage categories in AWS EC2?
   7. How many ways are there to invoke AWS Lambda (syntax)?
   8. What is horizontal and vertical scaling?
   9. What is the SQS service in AWS, and how can we send messages?
   10. What is the AWS Secrets Manager service, and what is its use?
   11. What is the use of AWS CloudWatch( mostly container and application logs monitor)?
------------------------------------------------------------------------------------------------------------------------------------------------------------------

H. PROJECT MANAGER ROUND:
   1. How can you motivate your team effectively? 
   2. How do you handle unproductive team members?
