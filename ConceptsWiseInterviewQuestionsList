A. OOPs (OBJECT ORIENTED PROGRAMMING):
   1. Explain polymorphism, its types, and scenario-based interview programs.
   2. Composition and aggregation in inheritance.
   3. Difference between == and .equals().
   4. How do you create a custom immutable class in Java?
   5. what is the Marker interface?
   6. Difference between String, StringBuffer, and StringBuilder?
   7. Explain SOLID Principles. 
   8. What is Garbase Collector? 
   9. Why are String Immutable?
----------------------------------------------------------------------------------------------------------------------------------------------------------------------

B. EXCEPTION HANDLING:
   1. What is an Exception in Java, and what does the Exception hierarchy look like?
   2. What is the difference between throw and throws in Java?
   3. What is Exception Propagation in Java, and how does it work?
   4. What is rethrowing an Exception in Java, and when is it used?
----------------------------------------------------------------------------------------------------------------------------------------------------------------------

C. MULTITHREADING:
   1. What is multithreading?
   2. What is the thread scheduler?
   3. How many ways are there to create a thread in Java?
   4. What is the default thread in Java?
   5. What is the volatile keyword, and when should it be used?
   6. How do we overcome data inconsistency problems, and what is the difference between synchronized, volatile, and atomic?
   7. How do we resolve deadlocks in multithreading in Java?
   8. What is ExecutorService (Thread Pools), and what are the differences between the submit() and execute() methods?
   9. What is ThreadLocal?
   10. What is a daemon thread?
   11. What is thread safety?
   12. What is synchronization, and what is a synchronized block?
   13. Explain the thread life cycle.
   14. What is the difference between join(), sleep(), and wait() methods?
   15. What is a green thread?
   16. How do we resolve race conditions?
   17. What happens if we call thread.start() twice?
   18. What is the difference between Callable and Runnable in multithreading?
   19. What is the Future interface in multithreading in Java?
   20. What is CompletableFuture in multithreading?
   21. What is the difference between Future and CompletableFuture?
   22. What are CountDownLatch, CyclicBarrier, Semaphore, Exchanger, and Phaser?
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------

D. REGULAR EXPRESSIONS:
   1. How can you use regular expressions to split a string based on commas or spaces in Java?
   2. How can you validate an email address using regular expressions in Java?
   3. How can you extract only numeric values from a given string using regular expressions in Java?
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------

E. COLLECTIONS FRAMEWORK:
   1. Hashmap internal working?
   2. Fail safe and fail fast collectionsin java?
   3. Difference between HashMap and ConcurrentHashMap?
   4. Difference between Comparable and Comparator?
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

F. JAVA8 FEATURES:
   1. Java 8 Features: Explain functional interfaces, lambda expressions, method references, and the Stream API (intermediate and terminal operations).
   2. Tell me about the Optional API and how it helps resolve NullPointerException.
   3. What are the new methods added in the Date API in Java 8?
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

G. ADVANCED JAVA(JDBC/SERVLET/JSP):
   1. What is boilerplate code?
   2. What are the steps to connect to an Oracle database?
   3. What is a DispatcherServlet?
   4. What is the difference between doGet and doPost?
   5. What is the difference between idempotent and non-idempotent methods (GET vs POST)?
   6. What are the lifecycle methods of Servlet and JSP?
   7. What is the difference between ServletConfig and ServletContext?
   8. What is the difference between a Type-3 driver and a Type-4 driver?
   9. What are some commonly used JSP tags?
   10. What is a namespace in JSP?
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

H. SPRING/SPRING BOOT:
   1. What are the features of Spring Boot? (AutoConfiguration, Starter Projects, Spring Initializer, Embedded Servers, Embedded Databases, Actuator Support, DevTools, etc.)
   2. What is the difference between @Qualifier and @Primary in Spring Boot?
   3. How does @Controller differ from @RestController in Spring Boot?
   4. What is the difference between BeanFactory Container and ApplicationContext Container in Spring?
   5. What is Dependency Injection in Spring, and what are its types? (Field Injection, Setter Injection, Constructor Injection, etc.)
   6. What are the different Spring bean scopes?
   7. What is the Spring Bean Lifecycle?
   8. What is the difference between @PreDestroy and @PostConstruct annotations? When should we use @PostConstruct?
   9. What is AutoWiring in Spring?
   10. What are Stereotype Annotations in Spring Boot?
   11. What is Inversion of Control (IoC) in Spring?
   12. What is a Spring Container?
   13. What is the difference between @Resource, @Autowired, and @Inject in Spring Boot?
   14. What is the difference between Singleton and Prototype bean scopes in Spring?
------------------------------------------------------------------------------------------------------------------------------------------------------------------------

I. HIBERNATE AND JPA:
   1. What is Hibernate?
   2. Can you explain a few Hibernate Generators?
   3. What are the different ways to write HQL queries?
   4. When should we choose HQL vs. Native SQL vs. Criteria API?
   5. What is Level 1 cache and Level 2 cache? What is the difference between Session and SessionFactory?
   6. What is the difference between the load() and get() methods in Hibernate?
   7. What is the difference between the save() and persist() methods in Hibernate?
   8. What is the difference between the update() and merge() methods in Hibernate?
   9. How does versioning work in Hibernate? How is versioning handled in Spring Boot?
   10. What is FetchType in Hibernate?
   11. What are the different types of fetch strategies in Hibernate?
   12. In the four types of association mappings, is there a default fetch type for all?
   13. How do you write a finder method to display names from an Employee table where names start with 'S'?
   14. How do you write a finder method to retrieve a list of employees based on their department?  //Questions may be asked about similar finder methods.
   15. How does EntityManager work in Hibernate?

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

J. SPRING SECURITY:
   1. What is the Spring Boot Security Configuration class? Explain the configure method.
   2. What is Authentication in Spring Security?
   3. What is Authorization in Spring Security?
   4. How does role-based authorization work in Spring Security?
   5. How can we secure a Spring Boot controller endpoint(@Secured or  @PreAuthorize)?
   6. What is JWT (JSON Web Token), and how does the authentication process work using JWT?
   7. What is OAuth2, and how does it work in Spring Security?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

K. WEBSERVICES:
   1. 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------

L. DOCKER:
   1. 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

M. KUBERNETES:
   1. 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------

N. Oracle(SQL/PLSQL), MySQL/Mongo DB:
   1. What is Normalization and its types (1st, 2nd, 3rd, 4th, 5th)?
   2. Explain DDL, DML, DQL, DRL, TCL, and DCL.
   3. Primary key vs. composite primary key vs. foreign key.
   4. Why is an alias used to refer to columns?
   5. Explain the ALTER command in SQL.
   6. Explain constraints like UNIQUE, NOT NULL, CHECK, etc.
   7. Explain cursors in Oracle and their types.
   8. Difference between DELETE, TRUNCATE, and DROP.
   9. Difference between DISTINCT and UNIQUE.
   10. How to find the 5th highest salary in Oracle?
   11. How to find the second-highest salary in Oracle and MySQL?
   12. Primary key vs. unique key.
   13. What is ROWNUM?
   14. Write an SQL query to increment salary by 10%.
   15. What are sequences in Oracle?
   16. How to use GROUP BY in SQL? Explain with one scenario.
   17. Explain set operators (UNION, UNION ALL, INTERSECT, MINUS).
   18. Explain the SQL Injection problem and its solutions.
   19. Explain SQL Injection types.
   20. How to revert the last SQL statement (ROLLBACK)?
   21. What are indexes in SQL and their types?
   22. What is the difference between DROP, FLASHBACK, and PURGE?
   23. Explain different types of joins.
   24. Explain the difference between SQL and NoSQL databases with examples.
   25. Explain views in Oracle.
   26. What are locks and the types of locks in Oracle?
   27. What is the difference between GROUP BY and window functions in SQL?
   28. Write an SQL query to find the number of employees by gender whose DOB is between 01/01/1960 and 31/12/1975.
   29. Write an SQL query to find the names of employees whose names start with 'M'.
   30. Write an SQL query to find all employees belonging to the HR department and whose gender is male.
   31. What are transactional triggers? Explain their uses.
   32. Difference between ROWID and ROWNUM.
   33. Write an SQL query to display the number of employees working in each job.
   34. Write a query to display the average, maximum, and minimum salaries for each job.
   35. What is the RANK() function in Oracle?
   36. What are synonyms in Oracle?
   37. What are stored procedure modes (IN, OUT, INOUT)?
   38. Write an SQL query to find the maximum salary from each department?
   39. Write an SQL Query to find an employee whose Salary is equal or greater than 10000? 
   40. What is the maximum no. Of columns a table can have? 
   41. Difference between procedure and function? 
   42. What is grant and revoke in Oracle? 
   43. Write a SQL query to get list of employees whose names contains 4-characters? 
   44. Tell me few of Aggregate or grouping functions (sum(), avg(), min(), max(), count()? 
   45. Write an SQL query to display employee salaries in ascending or descending order? 
   46. Difference between where vs having? 
   47. If MongoDB is mentioned in the job description, will they ask about MongoDB commands?
----------------------------------------------------------------------------------------------------------------------------------------------------------------------

O. APACHE KAFKA:
   1. 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

P. SPRING CLOUD/(Microservices):
   1. What is the difference between Monolithic Architecture and Microservices Architecture?
   2. What is an API Gateway?
   3. What is a Config Server?
   4. What is rate limiting at an API Gateway?
   5. How do you configure security filters at an API Gateway?
   6. How does the Round Robin Algorithm work in a Load Balancer?
   7. What is a Circuit Breaker, and how does it work?
--------------------------------------------------------------------------------------------------------------------------------------------------------------------

Q. GANGE OF FOUR DESIGN PATTERNS:
   1. Singleton Sign Pattern?(Creational)
   2. Strategy Design Pattern?(Behavarior)
   3. Factory Design Pattern?(Creational)
   4. State Design Pattern?(Behavarior)
   5. Composite Design Pattern?(Structural)
   6. Decorator Design Pattern?(Structural)
--------------------------------------------------------------------------------------------------------------------------------------------------------------------

R. MICROSERVICES DESIGN PATTERNS:
   1. Saga Design Pattern?
      a. Orchestration, b. Choreography.
   2. API Gateway Design Pattern?
   3. Circut Breaker Design Pattern?
   4. CQRS Design Pattern?
----------------------------------------------------------------------------------------------------------------------------------------------------------------------

S. AWS:
   1. What are AWS services do you know?
   2. What is the use of roles and policies in AWS IAM?
   3. What is a load balancer, and what are its types (Application, Network, Gateway)?
   4. What are inbound and outbound rules?
   5. What storage classes are available in an S3 bucket?
   6. What are the data storage categories in AWS EC2?
   7. How many ways are there to invoke AWS Lambda (syntax)?
   8. What is horizontal and vertical scaling?
   9. What is the SQS service in AWS, and how can we send messages?
   10. What is the AWS Secrets Manager service, and what is its use?
   11. What is the use of AWS CloudWatch( mostly container and application logs monitor)?
   12. Tell me which commands used to create and delete S3 bucket by using AWS CLI?
------------------------------------------------------------------------------------------------------------------------------------------------------------------

T. PROJECT MANAGER ROUND:
   1. How can you motivate your team effectively? 
   2. How do you handle unproductive team members?
------------------------------------------------------------------------------------------------------------------------------------------------------------------------

U. Tools:
   Git: 1. What is a Git conflict?
        2. What is a Git stash?
        3. What is the difference between merge and rebase?
        4. What is git log, and how can you see all commit messages with commit IDs?
------------------------------------------------------------------------------------------------------------------------------------------------------------------------

V. Spring Reactive Programming:
   1. What is Mono?
   2. What is Flux?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

W. PROJECT DEVELOPMENT CHALLENGES:
   1. 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

X. STREAM API PROGRAMS:
   1. 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

Y. STRING/ARRAYS PROGRAMS:
   1. 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

Z. HACKERRANK/LEETCODE PROGRAMS:
   1. 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

AA. JUNITS/MOCKITO:
    1. What is a Mock?
    2. When do we use @BeforeEach?
    3. Where should we place common code for all test cases that must load at test class loading time?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

AB. JVM ARCHITECTURE:
    1. What is the difference between JDK, JVM, and JRE?
    2. How does the Java Class Loader work, and what are its types?
    3. What are the various memory areas in the JVM?
    4. What is the JIT (Just-In-Time) Compiler?
    5. Where are objects created in the JVM?
    6. Where are static variables loaded in the JVM?
    7. Can you explain the Delegation Hierarchy Algorithm?
    8. What happens if the .class file is not found in any classloader?
    9. How does Java program execution work?
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

AC. CAN YOU PROVIDE A SCENARIO WHERE THIS EXCEPTION WILL BE THROWN:
    1. ClassNotFoundException?
    2. NullPointerException?
    3. 


---------------------------------------------------------------------------------------------------------------------------------------------------------------
1. 10:00am=Naveen J [Selected]
questions:
1) explain about thread and different ways of creating Thread?
2) create situation for raising class not found exception?
3) what are spring bean scopes?
4) explain about Hashmap Internals?
5) what is Garbage Collection in java?
6) What are the differences between this and super keyword?
7) what is Boiler plate code problem?
8) Difference between Autowired and Qualifier?

program1: 
input: take array of integer elements like 70,10,30,14,82,90,65
by using Traditional for loop sort the elements and display. 
output: 10,14,30,65,70,82,90.

program2: 
input: String s="Sample";
output: elpmaS
How to reverse a given String?

2. 10:30am=Veerachary [Not joined in meeting]
questions:
1) explain about strings and different ways to create string?
2) difference between String, String buffer,String Builder?
3) what is marker interface?
4) How can you handle exceptions in your project?
5) what are different types of annotations used in your controller class?
6)  What are the differences between throw and throws?
7) explain different annotations used in entity or domain class?
8) Difference between Session and SessionFactroy?

program: 
input: int a=10;
converting number into binary(1010)
replacing 0 to x(1x1x)
output: 1x1x

3. 11:00am =Bhargavi T[Selected]
questions:
1) difference between arrays and collections framework?
2) what is rest end point?
3) diffference between level1 and level2 caches?
4) difference between Comparable and Comparator?
5) What is Singleton Design pattern?
6) What are the differences between final, finally, and finalize?
7) explain about var-args method java 1.5 feature?
8) Difference between Get and load methods in hibernate?

program: CalculateAveragOfNumbers
input: 20,9,5,4,9
step1: use ArrayList(Double) add elements 
step2: find length of elements[size]
step3: loooping elements and add into total variable.
step4: calculate avaerage total/size and print.
output: 9.4

4. 11:30am=Revathi Madasu[Selected]
questions:
1) difference between overloading and overridding?
2) What is the difference between == operator and .equals() method?
3) explain about JVM architecture?
4) create situation for raising Ambigeous error?
5) Why java is platform independent language? 
6) how to Prevent[stop] a Thread from Execution?
7) Difference between Controller and Restcontroller?
8) what is json?

program: Pattern program
step1: take size as n=4
step2: looping i=1 and print k starts from 1.
print pattern: 1 2 3  4
               5 6 7  8
               9 10 11 12


5. 12:00pm=[]
questions:
1) difference between abstract class and interface?
2) why string is immutable?
3) explain about java 8 features?
4) difference between break and continue?
5) What is Polymorphism in java?
6) what is Serialization in java?
7) What is synchronized keyword in java?
8) what is Dependency Injection?

program: find third larget value of an Array?
input: 10,40,50,80,20,90
sort the array of elements
find size[length],size-3
output: 3rd largestelement is: 50.

6. 12:30pm=[]
1) explain about exception handling?
2) what is thread safety?
3) How to create an Immutable class in java?
4) why generics are introduced in java?
5) what is constructor?
6) Difference between arraylist and vector?
7) Difference between comparator and comparable?
8) What is autowiring and it types?

program: How to find duplicate characters in a String
input: String name="ashok sharma";
step1: read string data
step2: converting into chars
step3: finding length of char array
step4: looping char array
step5: checking euqlity and print duplicate chars
output: a,s,h
